// Generated by data binding compiler. Do not edit!
package org.videolan.vlc.databinding;

import android.graphics.drawable.BitmapDrawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import java.lang.Deprecated;
import java.lang.Object;
import org.videolan.medialibrary.media.MediaLibraryItem;
import org.videolan.vlc.R;

public abstract class LicenseActivityBinding extends ViewDataBinding {
  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final RecyclerView licenses;

  @Bindable
  protected MediaLibraryItem mPlaylist;

  @Bindable
  protected BitmapDrawable mCover;

  protected LicenseActivityBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CoordinatorLayout coordinator, RecyclerView licenses) {
    super(_bindingComponent, _root, _localFieldCount);
    this.coordinator = coordinator;
    this.licenses = licenses;
  }

  public abstract void setPlaylist(@Nullable MediaLibraryItem playlist);

  @Nullable
  public MediaLibraryItem getPlaylist() {
    return mPlaylist;
  }

  public abstract void setCover(@Nullable BitmapDrawable cover);

  @Nullable
  public BitmapDrawable getCover() {
    return mCover;
  }

  @NonNull
  public static LicenseActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.license_activity, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LicenseActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LicenseActivityBinding>inflateInternal(inflater, R.layout.license_activity, root, attachToRoot, component);
  }

  @NonNull
  public static LicenseActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.license_activity, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LicenseActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LicenseActivityBinding>inflateInternal(inflater, R.layout.license_activity, null, false, component);
  }

  public static LicenseActivityBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LicenseActivityBinding bind(@NonNull View view, @Nullable Object component) {
    return (LicenseActivityBinding)bind(component, view, R.layout.license_activity);
  }
}
