// Generated by data binding compiler. Do not edit!
package org.videolan.vlc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.ViewStubCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.lifecycle.LiveData;
import java.lang.Deprecated;
import java.lang.Object;
import org.videolan.liveplotgraph.PlotView;
import org.videolan.vlc.R;
import org.videolan.vlc.gui.video.VideoPlayerActivity;
import org.videolan.vlc.gui.view.AccessibleSeekBar;
import org.videolan.vlc.gui.view.FocusableTextView;
import org.videolan.vlc.gui.view.SwipeToUnlockView;
import org.videolan.vlc.media.Progress;

public abstract class PlayerHudBinding extends ViewDataBinding {
  @NonNull
  public final View abRepeatContainer;

  @NonNull
  public final ImageView abRepeatMarkerA;

  @NonNull
  public final ImageView abRepeatMarkerB;

  @NonNull
  public final Guideline abRepeatMarkerGuidelineA;

  @NonNull
  public final Guideline abRepeatMarkerGuidelineB;

  @NonNull
  public final ConstraintLayout abRepeatMarkerGuidelineContainer;

  @NonNull
  public final ImageView abRepeatReset;

  @NonNull
  public final ImageView abRepeatStop;

  @NonNull
  public final ConstraintLayout bookmarkMarkerContainer;

  @NonNull
  public final ViewStubCompat bookmarksStub;

  @NonNull
  public final LinearLayout infoGrids;

  @NonNull
  public final ImageView orientationToggle;

  @NonNull
  public final ImageView playerOverlayAdvFunction;

  @NonNull
  public final ImageView playerOverlayForward;

  @NonNull
  public final TextView playerOverlayForwardText;

  @NonNull
  public final FocusableTextView playerOverlayLength;

  @NonNull
  public final ImageView playerOverlayPlay;

  @NonNull
  public final ImageView playerOverlayRewind;

  @NonNull
  public final TextView playerOverlayRewindText;

  @NonNull
  public final AccessibleSeekBar playerOverlaySeekbar;

  @NonNull
  public final FocusableTextView playerOverlayTime;

  @NonNull
  public final ImageView playerOverlayTracks;

  @NonNull
  public final ImageView playerResize;

  @NonNull
  public final Space playerSpaceLeft;

  @NonNull
  public final Space playerSpaceRight;

  @NonNull
  public final ImageView playlistNext;

  @NonNull
  public final ImageView playlistPrevious;

  @NonNull
  public final PlotView plotView;

  @NonNull
  public final ConstraintLayout progressOverlay;

  @NonNull
  public final ImageView statsClose;

  @NonNull
  public final ConstraintLayout statsContainer;

  @NonNull
  public final ConstraintLayout statsGraphs;

  @NonNull
  public final NestedScrollView statsScrollview;

  @NonNull
  public final ConstraintLayout statsScrollviewContent;

  @NonNull
  public final SwipeToUnlockView swipeToUnlock;

  @NonNull
  public final TextView videoStatsTitle;

  @Bindable
  protected LiveData<Progress> mProgress;

  @Bindable
  protected Float mAbRepeatA;

  @Bindable
  protected Float mAbRepeatB;

  @Bindable
  protected VideoPlayerActivity mPlayer;

  protected PlayerHudBinding(Object _bindingComponent, View _root, int _localFieldCount,
      View abRepeatContainer, ImageView abRepeatMarkerA, ImageView abRepeatMarkerB,
      Guideline abRepeatMarkerGuidelineA, Guideline abRepeatMarkerGuidelineB,
      ConstraintLayout abRepeatMarkerGuidelineContainer, ImageView abRepeatReset,
      ImageView abRepeatStop, ConstraintLayout bookmarkMarkerContainer,
      ViewStubCompat bookmarksStub, LinearLayout infoGrids, ImageView orientationToggle,
      ImageView playerOverlayAdvFunction, ImageView playerOverlayForward,
      TextView playerOverlayForwardText, FocusableTextView playerOverlayLength,
      ImageView playerOverlayPlay, ImageView playerOverlayRewind, TextView playerOverlayRewindText,
      AccessibleSeekBar playerOverlaySeekbar, FocusableTextView playerOverlayTime,
      ImageView playerOverlayTracks, ImageView playerResize, Space playerSpaceLeft,
      Space playerSpaceRight, ImageView playlistNext, ImageView playlistPrevious, PlotView plotView,
      ConstraintLayout progressOverlay, ImageView statsClose, ConstraintLayout statsContainer,
      ConstraintLayout statsGraphs, NestedScrollView statsScrollview,
      ConstraintLayout statsScrollviewContent, SwipeToUnlockView swipeToUnlock,
      TextView videoStatsTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.abRepeatContainer = abRepeatContainer;
    this.abRepeatMarkerA = abRepeatMarkerA;
    this.abRepeatMarkerB = abRepeatMarkerB;
    this.abRepeatMarkerGuidelineA = abRepeatMarkerGuidelineA;
    this.abRepeatMarkerGuidelineB = abRepeatMarkerGuidelineB;
    this.abRepeatMarkerGuidelineContainer = abRepeatMarkerGuidelineContainer;
    this.abRepeatReset = abRepeatReset;
    this.abRepeatStop = abRepeatStop;
    this.bookmarkMarkerContainer = bookmarkMarkerContainer;
    this.bookmarksStub = bookmarksStub;
    this.infoGrids = infoGrids;
    this.orientationToggle = orientationToggle;
    this.playerOverlayAdvFunction = playerOverlayAdvFunction;
    this.playerOverlayForward = playerOverlayForward;
    this.playerOverlayForwardText = playerOverlayForwardText;
    this.playerOverlayLength = playerOverlayLength;
    this.playerOverlayPlay = playerOverlayPlay;
    this.playerOverlayRewind = playerOverlayRewind;
    this.playerOverlayRewindText = playerOverlayRewindText;
    this.playerOverlaySeekbar = playerOverlaySeekbar;
    this.playerOverlayTime = playerOverlayTime;
    this.playerOverlayTracks = playerOverlayTracks;
    this.playerResize = playerResize;
    this.playerSpaceLeft = playerSpaceLeft;
    this.playerSpaceRight = playerSpaceRight;
    this.playlistNext = playlistNext;
    this.playlistPrevious = playlistPrevious;
    this.plotView = plotView;
    this.progressOverlay = progressOverlay;
    this.statsClose = statsClose;
    this.statsContainer = statsContainer;
    this.statsGraphs = statsGraphs;
    this.statsScrollview = statsScrollview;
    this.statsScrollviewContent = statsScrollviewContent;
    this.swipeToUnlock = swipeToUnlock;
    this.videoStatsTitle = videoStatsTitle;
  }

  public abstract void setProgress(@Nullable LiveData<Progress> progress);

  @Nullable
  public LiveData<Progress> getProgress() {
    return mProgress;
  }

  public abstract void setAbRepeatA(@Nullable Float ab_repeat_a);

  @Nullable
  public Float getAbRepeatA() {
    return mAbRepeatA;
  }

  public abstract void setAbRepeatB(@Nullable Float ab_repeat_b);

  @Nullable
  public Float getAbRepeatB() {
    return mAbRepeatB;
  }

  public abstract void setPlayer(@Nullable VideoPlayerActivity player);

  @Nullable
  public VideoPlayerActivity getPlayer() {
    return mPlayer;
  }

  @NonNull
  public static PlayerHudBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.player_hud, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static PlayerHudBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<PlayerHudBinding>inflateInternal(inflater, R.layout.player_hud, root, attachToRoot, component);
  }

  @NonNull
  public static PlayerHudBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.player_hud, null, false, component)
   */
  @NonNull
  @Deprecated
  public static PlayerHudBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<PlayerHudBinding>inflateInternal(inflater, R.layout.player_hud, null, false, component);
  }

  public static PlayerHudBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static PlayerHudBinding bind(@NonNull View view, @Nullable Object component) {
    return (PlayerHudBinding)bind(component, view, R.layout.player_hud);
  }
}
