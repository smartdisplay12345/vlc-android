// Generated by data binding compiler. Do not edit!
package org.videolan.vlc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import org.videolan.vlc.R;

public abstract class DialogDuplicationWarningBinding extends ViewDataBinding {
  @NonNull
  public final Button addAllButton;

  @NonNull
  public final Button addNewButton;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final ConstraintLayout myTestRoot;

  @NonNull
  public final TextView primaryTextview;

  @NonNull
  public final TextView secondaryTextview;

  protected DialogDuplicationWarningBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Button addAllButton, Button addNewButton, Button cancelButton,
      ConstraintLayout myTestRoot, TextView primaryTextview, TextView secondaryTextview) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addAllButton = addAllButton;
    this.addNewButton = addNewButton;
    this.cancelButton = cancelButton;
    this.myTestRoot = myTestRoot;
    this.primaryTextview = primaryTextview;
    this.secondaryTextview = secondaryTextview;
  }

  @NonNull
  public static DialogDuplicationWarningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_duplication_warning, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogDuplicationWarningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogDuplicationWarningBinding>inflateInternal(inflater, R.layout.dialog_duplication_warning, root, attachToRoot, component);
  }

  @NonNull
  public static DialogDuplicationWarningBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_duplication_warning, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogDuplicationWarningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogDuplicationWarningBinding>inflateInternal(inflater, R.layout.dialog_duplication_warning, null, false, component);
  }

  public static DialogDuplicationWarningBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogDuplicationWarningBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (DialogDuplicationWarningBinding)bind(component, view, R.layout.dialog_duplication_warning);
  }
}
