// Generated by data binding compiler. Do not edit!
package org.videolan.vlc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import org.videolan.vlc.R;

public abstract class PlayerOverlayTracksBinding extends ViewDataBinding {
  @NonNull
  public final PlayerOverlayTrackItemBinding audioTracks;

  @NonNull
  public final ConstraintLayout playerOverlayTracks;

  @NonNull
  public final PlayerOverlayTrackItemBinding subtitleTracks;

  @NonNull
  public final View tracksSeparator2;

  @NonNull
  public final View tracksSeparator3;

  @NonNull
  public final PlayerOverlayTrackItemBinding videoTracks;

  protected PlayerOverlayTracksBinding(Object _bindingComponent, View _root, int _localFieldCount,
      PlayerOverlayTrackItemBinding audioTracks, ConstraintLayout playerOverlayTracks,
      PlayerOverlayTrackItemBinding subtitleTracks, View tracksSeparator2, View tracksSeparator3,
      PlayerOverlayTrackItemBinding videoTracks) {
    super(_bindingComponent, _root, _localFieldCount);
    this.audioTracks = audioTracks;
    this.playerOverlayTracks = playerOverlayTracks;
    this.subtitleTracks = subtitleTracks;
    this.tracksSeparator2 = tracksSeparator2;
    this.tracksSeparator3 = tracksSeparator3;
    this.videoTracks = videoTracks;
  }

  @NonNull
  public static PlayerOverlayTracksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.player_overlay_tracks, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static PlayerOverlayTracksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<PlayerOverlayTracksBinding>inflateInternal(inflater, R.layout.player_overlay_tracks, root, attachToRoot, component);
  }

  @NonNull
  public static PlayerOverlayTracksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.player_overlay_tracks, null, false, component)
   */
  @NonNull
  @Deprecated
  public static PlayerOverlayTracksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<PlayerOverlayTracksBinding>inflateInternal(inflater, R.layout.player_overlay_tracks, null, false, component);
  }

  public static PlayerOverlayTracksBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static PlayerOverlayTracksBinding bind(@NonNull View view, @Nullable Object component) {
    return (PlayerOverlayTracksBinding)bind(component, view, R.layout.player_overlay_tracks);
  }
}
