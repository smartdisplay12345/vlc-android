// Generated by data binding compiler. Do not edit!
package org.videolan.vlc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;
import org.videolan.vlc.R;
import org.videolan.vlc.gui.dialogs.SubDownloadDialogState;
import org.videolan.vlc.gui.view.LanguageSelector;
import org.videolan.vlc.viewmodels.SubtitlesModel;

public abstract class SubtitleDownloaderDialogBinding extends ViewDataBinding {
  @NonNull
  public final Button cancelButton;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextInputEditText episode;

  @NonNull
  public final TextInputLayout episodeContainer;

  @NonNull
  public final LanguageSelector languageListSpinner;

  @NonNull
  public final TextView message;

  @NonNull
  public final TextView movieName;

  @NonNull
  public final TextInputEditText name;

  @NonNull
  public final TextInputLayout nameContainer;

  @NonNull
  public final TextView resultDescription;

  @NonNull
  public final Button retryButton;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final Button searchButton;

  @NonNull
  public final TextInputEditText season;

  @NonNull
  public final TextInputLayout seasonContainer;

  @NonNull
  public final ImageView subDownloadHistory;

  @NonNull
  public final ProgressBar subDownloadLoading;

  @NonNull
  public final ImageView subDownloadNext;

  @NonNull
  public final ImageView subDownloadSearch;

  @NonNull
  public final RecyclerView subsDownloadList;

  @NonNull
  public final RecyclerView subsHistoryList;

  @Bindable
  protected SubtitlesModel mViewmodel;

  @Bindable
  protected SubDownloadDialogState mState;

  @Bindable
  protected Boolean mInError;

  protected SubtitleDownloaderDialogBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Button cancelButton, ConstraintLayout constraintLayout,
      TextInputEditText episode, TextInputLayout episodeContainer,
      LanguageSelector languageListSpinner, TextView message, TextView movieName,
      TextInputEditText name, TextInputLayout nameContainer, TextView resultDescription,
      Button retryButton, NestedScrollView scrollView, Button searchButton,
      TextInputEditText season, TextInputLayout seasonContainer, ImageView subDownloadHistory,
      ProgressBar subDownloadLoading, ImageView subDownloadNext, ImageView subDownloadSearch,
      RecyclerView subsDownloadList, RecyclerView subsHistoryList) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cancelButton = cancelButton;
    this.constraintLayout = constraintLayout;
    this.episode = episode;
    this.episodeContainer = episodeContainer;
    this.languageListSpinner = languageListSpinner;
    this.message = message;
    this.movieName = movieName;
    this.name = name;
    this.nameContainer = nameContainer;
    this.resultDescription = resultDescription;
    this.retryButton = retryButton;
    this.scrollView = scrollView;
    this.searchButton = searchButton;
    this.season = season;
    this.seasonContainer = seasonContainer;
    this.subDownloadHistory = subDownloadHistory;
    this.subDownloadLoading = subDownloadLoading;
    this.subDownloadNext = subDownloadNext;
    this.subDownloadSearch = subDownloadSearch;
    this.subsDownloadList = subsDownloadList;
    this.subsHistoryList = subsHistoryList;
  }

  public abstract void setViewmodel(@Nullable SubtitlesModel viewmodel);

  @Nullable
  public SubtitlesModel getViewmodel() {
    return mViewmodel;
  }

  public abstract void setState(@Nullable SubDownloadDialogState state);

  @Nullable
  public SubDownloadDialogState getState() {
    return mState;
  }

  public abstract void setInError(@Nullable Boolean inError);

  @Nullable
  public Boolean getInError() {
    return mInError;
  }

  @NonNull
  public static SubtitleDownloaderDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.subtitle_downloader_dialog, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SubtitleDownloaderDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SubtitleDownloaderDialogBinding>inflateInternal(inflater, R.layout.subtitle_downloader_dialog, root, attachToRoot, component);
  }

  @NonNull
  public static SubtitleDownloaderDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.subtitle_downloader_dialog, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SubtitleDownloaderDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SubtitleDownloaderDialogBinding>inflateInternal(inflater, R.layout.subtitle_downloader_dialog, null, false, component);
  }

  public static SubtitleDownloaderDialogBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SubtitleDownloaderDialogBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (SubtitleDownloaderDialogBinding)bind(component, view, R.layout.subtitle_downloader_dialog);
  }
}
